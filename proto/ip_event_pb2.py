# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ip_event.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ip_event.proto',
  package='lookout.backend_coding_questions.q1',
  serialized_pb=_b('\n\x0eip_event.proto\x12#lookout.backend_coding_questions.q1\")\n\x07IpEvent\x12\x12\n\napp_sha256\x18\x01 \x02(\t\x12\n\n\x02ip\x18\x02 \x02(\x03')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_IPEVENT = _descriptor.Descriptor(
  name='IpEvent',
  full_name='lookout.backend_coding_questions.q1.IpEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='app_sha256', full_name='lookout.backend_coding_questions.q1.IpEvent.app_sha256', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='lookout.backend_coding_questions.q1.IpEvent.ip', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=96,
)

DESCRIPTOR.message_types_by_name['IpEvent'] = _IPEVENT

IpEvent = _reflection.GeneratedProtocolMessageType('IpEvent', (_message.Message,), dict(
  DESCRIPTOR = _IPEVENT,
  __module__ = 'ip_event_pb2'
  # @@protoc_insertion_point(class_scope:lookout.backend_coding_questions.q1.IpEvent)
  ))
_sym_db.RegisterMessage(IpEvent)


# @@protoc_insertion_point(module_scope)
